using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Windows.Forms;
using Microsoft.Office.Interop.Word;
using System.Data.SqlClient;
using System.IO;
using System.Reflection;

namespace ModuleSpecificationSite.Admin
{
    public partial class AdminSpecViewPage : System.Web.UI.Page
    {
        Microsoft.Office.Interop.Word.Application oWord;
        Microsoft.Office.Interop.Word.Document oWordDoc;
        Object oMissing = System.Reflection.Missing.Value;

        protected void Page_Load(object sender, EventArgs e)
        {
            //The scriptmanager allows the user to access the links to the documents without an error prompting
            ScriptManager scriptManager = ScriptManager.GetCurrent(this.Page);
            scriptManager.RegisterPostBackControl(this.OpenWordLink);
            scriptManager.RegisterPostBackControl(this.OpenPDFLink);
            scriptManager.RegisterPostBackControl(this.btnExportToWord0);
            scriptManager.RegisterPostBackControl(this.btnExportToPDF0);
            OpenWordLink.Visible = false;
            OpenPDFLink.Visible = false;

            //Checks if the session is null or not
            if (Session["getModuleID"] == null)
            {
                //description: when the session gets timed out, the page is redirected to appropriate page.
                Response.Redirect("~/Admin/AdminSearch.aspx", false);
                HttpContext.Current.ApplicationInstance.CompleteRequest();
                return;
            }
            else
            {
                //stores the session to the labels.
                lblStoreModuleCode.Text = Convert.ToString(Session["getModuleID"]);
                LabelCode.Text = Convert.ToString(Session["getCode"]);
                LabelTitle.Text = Convert.ToString(Session["getTitle"]);
            }
            //clear the cache to stop duplicates
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
        }

        public override void VerifyRenderingInServerForm(System.Web.UI.Control control)
        { }

        public void ExportSpecInformation()
        {
            //This is used to open up the word template "ModuleTemplate and insert
            //all the module information into that template.
            //The word application open up the template and then automate the information into
            //the template.
            oWord = new Microsoft.Office.Interop.Word.Application();
            oWordDoc = new Microsoft.Office.Interop.Word.Document();

            Object oTrue = false;
            Object oFalse = false;
            //Turn this to true if you want to see the document when automating.
            oWord.Visible = false;

            //Get the module template
            Object oTemplatePath = (Server.MapPath(@"~\Documents\ModuleTemplate.dotx"));

            oWordDoc = oWord.Documents.Add(ref oTemplatePath, ref oMissing, ref oMissing, ref oMissing);
            //Finds all the mergefields and loops through them.
            foreach (Microsoft.Office.Interop.Word.Field myMergeField in oWordDoc.Fields)
            {

                Microsoft.Office.Interop.Word.Range rngFieldCode = myMergeField.Code;
                String fieldText = rngFieldCode.Text;

                if (fieldText.StartsWith(""))
                {

                    Int32 endMerge = fieldText.IndexOf("\\");
                    Int32 fieldNameLength = fieldText.Length - endMerge;
                    String fieldName = fieldText.Substring(11, endMerge - 11);

                    fieldName = fieldName.Trim();

                    Microsoft.Office.Interop.Word.Find fnd = oWord.ActiveWindow.Selection.Find;
                    fnd.ClearFormatting();
                    fnd.Replacement.ClearFormatting();
                    fnd.Forward = true;
                    fnd.Wrap = Microsoft.Office.Interop.Word.WdFindWrap.wdFindContinue;

                    //Find the field and inserts the module code if it exists
                    #region "Find Module Code"
                    if (fieldName == "Code")
                    {
                        myMergeField.Select();
                        oWord.Selection.TypeBackspace();
                        oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleCodeLabel")).Text.Replace("&nbsp;", " "));
                    }
                    #endregion

                    //Find the field and inserts the module title if it exists
                    #region "Find Module Title"
                    if (fieldName == "Title")
                    {
                        myMergeField.Select();
                        oWord.Selection.TypeBackspace();
                        oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleTitleLabel")).Text.Replace("&nbsp;", " "));
                    }
                    #endregion

                    //Find the field and inserts the school if it exists
                    #region "Find School"
                    if (fieldName == "School")
                    {
                        myMergeField.Select();
                        oWord.Selection.TypeBackspace();
                        oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SchoolNameLabel")).Text.Replace("&nbsp;", " "));
                    }
                    #endregion

                    //Find the field and inserts the courses if it exists
                    #region "Find Courses"
                    if (fieldName == "Courses")
                    {
                        System.Web.UI.WebControls.GridView Coursegv = new System.Web.UI.WebControls.GridView();
                        Coursegv = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewCourseDetails"));

                        System.Web.UI.WebControls.CheckBox chkcourse = FormViewModuleTemplate.FindControl("cbCourses") as System.Web.UI.WebControls.CheckBox;
                        //Loops through the gridview and gets all the courses that are selected in that gridview
                        if (Coursegv.Rows.Count != 0)
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();

                            for (int i = 0; i <= Coursegv.Rows.Count - 1; i++)
                            {
                                for (int j = 0; j <= Coursegv.Rows[i].Cells.Count - 1; j++)
                                {
                                    oWord.Selection.TypeText(Coursegv.Rows[i].Cells[j].Text.Replace("&nbsp;", Environment.NewLine).Replace("&amp;", "&"));
                                }
                            }
                            //delete a space behind to remove any whitespacing.
                            oWord.Selection.TypeBackspace();
                        }
                        else
                        {
                            //Deletes the course field and the title and removes it from the document.
                            fnd.Text = "NAME OF COURSE(S):";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the tutor if it exists
                    #region "Find Tutor"
                    if (fieldName == "Tutor")
                    {
                        System.Web.UI.WebControls.GridView Tutorgv = new System.Web.UI.WebControls.GridView();
                        Tutorgv = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewTutorDetails"));

                        System.Web.UI.WebControls.CheckBox chktutor = FormViewModuleTemplate.FindControl("cbTutors") as System.Web.UI.WebControls.CheckBox;
                        //Loops through the gridview and gets all the tutors that are selected in that gridview
                        if (chktutor.Checked)
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            for (int i = 0; i <= Tutorgv.Rows.Count - 1; i++)
                            {
                                for (int j = 0; j <= Tutorgv.Rows[i].Cells.Count - 1; j++)
                                {
                                    oWord.Selection.TypeText(Tutorgv.Rows[i].Cells[j].Text.Replace("&nbsp;", ""));
                                }
                            }
                            //delete a space behind to remove any whitespacing.
                            oWord.Selection.TypeBackspace();

                        }
                        else
                        {
                            //Deletes the course field and the title and removes it from the document.
                            fnd.Text = "MODULE LEADER:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the location if it exists
                    #region "Find Location"
                    if (fieldName == "Location")
                    {
                        System.Web.UI.WebControls.GridView GridViewTable = new System.Web.UI.WebControls.GridView();
                        GridViewTable = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewLocationDetails"));

                        System.Web.UI.WebControls.CheckBox chklocation = FormViewModuleTemplate.FindControl("cbLocation") as System.Web.UI.WebControls.CheckBox;
                        //Loops through the gridview and gets all the tutors that are selected in that gridview
                        if (chklocation.Checked)
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            for (int i = 0; i <= GridViewTable.Rows.Count - 1; i++)
                            {
                                for (int j = 0; j <= GridViewTable.Rows[i].Cells.Count - 1; j++)
                                {
                                    oWord.Selection.TypeText(GridViewTable.Rows[i].Cells[j].Text.Replace("&nbsp;", Environment.NewLine));
                                }
                            }
                        }
                        else
                        {
                            //Deletes the course field and the title and removes it from the document.
                            fnd.Text = "LOCATION:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the compulsory if it exists or remove the compulsory section if not.
                    #region "Find Compulsory"
                    if (fieldName == "Compulsory")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("CompulsoryLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("CompulsoryLabel")).Text.Trim());
                        }

                        else
                        {
                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                        }
                    }
                    #endregion

                    //Find the field and inserts the core if it exists or remove the core section if not.
                    #region "Find Core"
                    if (fieldName == "Core")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("CoreLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("CoreLabel")).Text.Trim());
                        }

                        else
                        {
                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                        }
                    }
                    #endregion

                    //Find the field and inserts the optional if it exists or remove the optional section if not.
                    #region "Find Optional"
                    if (fieldName == "Optional")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("OptionalLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("OptionalLabel")).Text.Trim());
                        }

                        else
                        {
                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                        }
                    }
                    #endregion

                    //Find the field and inserts the stand alone if it exists or remove the stand alone section if not.
                    #region "Find Stand Alone"
                    if (fieldName == "Stand")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("StandAloneLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("StandAloneLabel")).Text.Trim());
                        }

                        else
                        {
                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                        }
                    }
                    #endregion

                    //Find the field and inserts the credit rating if it exists.
                    #region "Find Credit Rating"
                    if (fieldName == "Credit")
                    {
                        myMergeField.Select();
                        oWord.Selection.TypeBackspace();
                        oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("CreditRatingLabel")).Text.Replace("&nbsp;", " "));
                    }
                    #endregion

                    //Find the field and inserts the module rating if it exists.
                    #region "Find Module Level"
                    if (fieldName == "Level")
                    {
                        myMergeField.Select();
                        oWord.Selection.TypeBackspace();
                        oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleRatingLabel")).Text.Replace("&nbsp;", " "));
                    }
                    #endregion

                    //finds all the learning outcomes.
                    #region "Find Learning Methods"

                    #region "Learning Method One"
                    //checks if a lecture outcomes exists and insert this into the template.
                    if (fieldName == "1")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("LectureLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("LectureLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }
                        else
                        //remove the lecture outcome from the template if it doesn't exist.
                        {
                            fnd.Text = "Lecture:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);
                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Two"
                    //checks if a semninar outcomes exists and insert this into the template.
                    if (fieldName == "2")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SeminarLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SeminarLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }

                        else
                        {
                            //remove the semninar outcome from the template if it doesn't exist.
                            fnd.Text = "Seminar:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Three"
                    //checks if a tutorial and project outcomes exists and insert this into the template.
                    if (fieldName == "3")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("TutorialAndProjectLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("TutorialAndProjectLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }

                        else
                        {
                            //remove the tutorial and project outcome from the template if it doesn't exist.
                            fnd.Text = "Tutorial and Project Supervision:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Four"
                    //checks if a Practical Classes and Demonstrations outcomes exists and insert this into the template.
                    if (fieldName == "4")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("PracticalAndDemonstrationsLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("PracticalAndDemonstrationsLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }

                        else
                        {
                            //remove the Practical Classes and Demonstrations outcome from the template if it doesn't exist.
                            fnd.Text = "Practical Classes and Demonstrations:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Five"
                    //checks if a Supervised Time in Studio/Workshop outcomes exists and insert this into the template.
                    if (fieldName == "5")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("StudioAndWorkshopLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("StudioAndWorkshopLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }

                        else
                        {
                            //remove the Supervised Time in Studio/Workshop outcome from the template if it doesn't exist.
                            fnd.Text = "Supervised Time in Studio/Workshop:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Six"
                    //checks if a Fieldwork and External Visits outcomes exists and insert this into the template.
                    if (fieldName == "6")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("FieldworkAndExternalLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("FieldworkAndExternalLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }
                        else
                        {
                            //remove the Fieldwork and External Visits outcome from the template if it doesn't exist.
                            fnd.Text = "Fieldwork and External Visits:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Seven"
                    //checks if a Work Based Learning outcomes exists and insert this into the template.
                    if (fieldName == "7")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("WorkbasedLearningLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("WorkbasedLearningLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }

                        else
                        {
                            //remove the Work Based Learning outcome from the template if it doesn't exist.
                            fnd.Text = "Work Based Learning:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Eight"
                    //checks if a Placement and Year abroad outcomes exists and insert this into the template.
                    if (fieldName == "8")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("PlacementLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("PlacementLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }

                        else
                        {
                            //remove the Placement and Year abroad outcome from the template if it doesn't exist.
                            fnd.Text = "Placement and Year abroad:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Nine"
                    //checks if a Guided Independent study abroad outcomes exists and insert this into the template.
                    if (fieldName == "9")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("IndependentStudyLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("IndependentStudyLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }
                        else
                        {
                            //remove the Guided Independent study abroad outcome from the template if it doesn't exist.
                            fnd.Text = "Guided Independent study:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Learning Method Ten"
                    //checks if a Total Hours outcomes exists and insert this into the template.
                    if (fieldName == "10")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("TotalHoursLabel")).Text != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("TotalHoursLabel")).Text.Replace("&nbsp;", " ").Replace(".0", "") + " hours");
                        }

                        else
                        {
                            //remove the Total Hours outcome from the template if it doesn't exist.
                            fnd.Text = "Total Hours:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion
                    #endregion

                    //Find the field and inserts the Pre_Requisites if it exists.
                    #region "Find Pre-Requisities"
                    if (fieldName == "Pre")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("Pre_RequisitesLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("Pre_RequisitesLabel")).Text.Replace("&nbsp;", " "));
                        }
                    }
                    #endregion

                    //Find the field and inserts the rps if it exists.
                    #region "Find Recommended Prior Study"
                    if (fieldName == "RPS")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("R_P_SLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("R_P_SLabel")).Text.Replace("&nbsp;", " "));
                        }
                    }
                    #endregion

                    //Find the field and inserts the Co_Requisites if it exists.
                    #region "Find Co-Requisities"
                    if (fieldName == "Co")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("Co_RequisitesLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("Co_RequisitesLabel")).Text.Replace("&nbsp;", " "));
                        }
                    }
                    #endregion

                    //Find the field and inserts the Shared Teaching if it exists.
                    #region "Find Shared Teaching"
                    if (fieldName == "Shared")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SharedTeachingLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SharedTeachingLabel")).Text.Replace("&nbsp;", " "));
                        }
                        else
                        {
                            //Removes Shared Teaching from the template
                            fnd.Text = "SHARED TEACHING:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the pbr if it exists.
                    #region "Find Professional Body Requirement"
                    if (fieldName == "PBR")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("P_B_RLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("P_B_RLabel")).Text.Replace("&nbsp;", " "));
                        }
                    }
                    #endregion

                    //Find the field and inserts the Graded if it exists.
                    #region "Find Graded or Not Graded"
                    if (fieldName == "Grade")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("GradedLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("GradedLabel")).Text.Replace("&nbsp;", " "));
                        }
                    }
                    #endregion

                    //Find the field and inserts the Barred Combination if it exists.
                    #region Find Barred Combinations"
                    if (fieldName == "Barred")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("BarredCombinationLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("BarredCombinationLabel")).Text.Replace("&nbsp;", " "));
                        }
                    }
                    #endregion

                    //Find the field and inserts the Module Synopsis if it exists.
                    #region "Find Synopsis"
                    if (fieldName == "Synopsis")
                    {
                        myMergeField.Select();
                        oWord.Selection.TypeBackspace();
                        oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SynopsisLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                    }
                    #endregion

                    //Find the field and inserts the Module Syllabus if it exists.
                    #region "Find Syllabus"
                    if (fieldName == "Syllabus")
                    {
                        myMergeField.Select();
                        oWord.Selection.TypeBackspace();
                        oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SyllabusLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                    }
                    #endregion

                    //Find the field and inserts the Learning Outcomes if it exists.
                    #region "Find Learning Outcomes"
                    if (fieldName == "Outcomes")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("LearningOutcomesLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("LearningOutcomesLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        //Removes Learning Outcomes from template
                        {
                            myMergeField.Select();
                            myMergeField.Delete();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Knowledge if it exists.
                    #region "Find Knowledge"
                    if (fieldName == "Knowledge")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("KnowledgeLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("KnowledgeLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            //Removes Knowledge from template
                            fnd.Text = "Knowledge and Understanding:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Abilities if it exists.
                    #region "Find Abilities"
                    if (fieldName == "Abilities")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("AbilitiesLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("AbilitiesLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            //Removes Abilities from template
                            fnd.Text = "Abilities:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Assessment if it exists.
                    #region "Find Assessment"
                    if (fieldName == "Assessment")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("AssessmentStrategyLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("AssessmentStrategyLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        //Removes Assessment from template
                        else
                        {
                            myMergeField.Select();
                            myMergeField.Delete();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Formative if it exists.
                    #region "Find Formative"
                    if (fieldName == "Formative")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("FormativeLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("FormativeLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        //Removes Formative from template
                        else
                        {
                            fnd.Text = "Formative Assessment:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Summative if it exists.
                    #region "Find Summative"
                    if (fieldName == "Summative")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SummativeLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("SummativeLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            //Removes Summative from template
                            fnd.Text = "Summative Assessment:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 2;
                            Object count = 2;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Tasks if it exists.
                    #region "Find Tasks/Weighting"
                    if (fieldName == "Tasks")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("TasksLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("TasksLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            //Removes Tasks from template
                            fnd.Text = "Assessment tasks/weighting:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Criteria if it exists.
                    #region "Find Criteria"
                    if (fieldName == "Criteria")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("CriteriaLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("CriteriaLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            //Removes Criteria from template
                            fnd.Text = "Assessment Criteria:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Strategy if it exists.
                    #region "Find Learning Strategy"
                    if (fieldName == "Strategy")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("StrategyLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("StrategyLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        //Removes Strategy from template
                        {
                            fnd.Text = "LEARNING STRATEGY:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the field and inserts the Resources if it exists.
                    #region "Find Resources Required"
                    if (fieldName == "Resources")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ResourcesRequiredLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ResourcesRequiredLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            //Removes Resources from template
                            fnd.Text = "RESOURCES REQUIRED:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    //Find the other information and extract those to the template
                    #region "Other Infomation"
                    #region "Scheme"
                    if (fieldName == "Scheme")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleSchemeLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleSchemeLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            fnd.Text = "MODULE SCHEME:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "Status"
                    if (fieldName == "Status")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleStatusLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleStatusLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            fnd.Text = "MODULE STATUS:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);
                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeBackspace();

                        }
                    }
                    #endregion

                    #region "Aim"
                    if (fieldName == "Aim")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleAimsLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleAimsLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            fnd.Text = "MODULE AIM:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 2;
                            Object count = 2;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion

                    #region "OtherInfo"
                    if (fieldName == "Other")
                    {
                        if (((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("OtherInfoLabel")).Text.Trim() != "")
                        {
                            myMergeField.Select();
                            oWord.Selection.TypeBackspace();
                            oWord.Selection.TypeText(((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("OtherInfoLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n"));
                        }
                        else
                        {
                            fnd.Text = "OTHER INFORMATION:";
                            fnd.Replacement.Text = "";

                            object replaceAll = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;
                            fnd.Execute(ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref oMissing, ref oMissing, ref oMissing, ref oMissing, ref oMissing,
                                ref replaceAll, ref oMissing, ref oMissing, ref oMissing, ref oMissing);

                            myMergeField.Select();
                            myMergeField.Delete();
                            //

                            oWord.Selection.TypeBackspace();
                            Range range = oWord.Selection.Range;
                            Object unit = 1;
                            Object count = 1;
                            range.Delete(ref unit, ref count);
                        }
                    }
                    #endregion
                    #endregion
                }
            }
            //Get the assessment and import the table into the word template.
            #region "Find Table"
            //Checks to see if the bookmark first exists
            if (oWordDoc.Bookmarks.Exists("tabledata"))
            {
                System.Web.UI.WebControls.GridView AssessmentTable = new System.Web.UI.WebControls.GridView();
                AssessmentTable = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewAssessmentTable"));

                //If nothing exists in the the table then it removes the bookmark.
                if (AssessmentTable.Rows.Count == 0)
                {
                    oWordDoc.Bookmarks["tabledata"].Range.Text = "";

                    Range range = oWord.Selection.Range;
                    Object unit = 1;
                    Object count = 1;
                    range.Delete(ref unit, ref count);
                }
                else
                {

                    //Save the table into a html file
                    string code = ((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleCodeLabel")).Text.Replace("&nbsp;", " ");
                    AssessmentTable.Width = 625;
                    string test = Server.MapPath(@"~\Documents\Word\" + code + ".html");
                    StreamWriter sWriter = System.IO.File.CreateText(test);
                    System.IO.StringWriter sw = new System.IO.StringWriter();
                    System.Web.UI.HtmlTextWriter hw = new HtmlTextWriter(sw);
                    AssessmentTable.HeaderRow.Cells[0].Visible = false;
                    for (int i = 0; i < AssessmentTable.Rows.Count; i++)
                    {
                        GridViewRow row = AssessmentTable.Rows[i];
                    }
                    AssessmentTable.RenderControl(hw);
                    sWriter.WriteLine(sw.ToString());
                    sWriter.Close();

                    //Get the html file and insert the file into the bookmark
                    String oFilePath = Server.MapPath(@"~\Documents\Word\" + code + ".html");
                    oWordDoc.Bookmarks["tabledata"].Range.InsertFile(oFilePath, ref oMissing, ref oFalse, ref oFalse, ref oFalse);
                    //Remove the file after it has been inserted.
                    System.IO.File.Delete(Server.MapPath(@"~\Documents\Word\" + code + ".html"));
                    for (int i = 0; i < AssessmentTable.Rows.Count; i++)
                    {
                        GridViewRow row = AssessmentTable.Rows[i];
                        AssessmentTable.Width = 885;
                        AssessmentTable.DataBind();
                    }
                }
            }
            #endregion

            //Find the approved and insert into the template
            #region "Find Approved"
            string approved = ((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ApprovedLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n");
            if (oWordDoc.Bookmarks.Exists("approved"))
            {
                oWordDoc.Bookmarks["approved"].Range.Text = approved;
            }
            #endregion

            //Find the reading list and insert into the template
            #region "Find Reading List"
            if (oWordDoc.Bookmarks.Exists("readinglist"))
            {
                Object oAddress = ((System.Web.UI.WebControls.HyperLink)FormViewModuleTemplate.FindControl("ReadingListLabel")).Text.Replace("&nbsp;", " ").Replace("<br />", "\r\n");
                Object oRange = oWordDoc.Bookmarks["readinglist"].Range;
                oWordDoc.Hyperlinks.Add(oRange, ref oAddress, ref oMissing, ref oMissing, ref oMissing, ref oMissing).Range.Font.Size = 14;
            }
            #endregion
        }

        //This is used to check if courses/tutors/locatin/assessment has anything selected.
        #region ExtraSqlDataSource CheckBox States & Panels View"
        protected void SqlDataSourceTutorDetails_Selected(object sender, SqlDataSourceStatusEventArgs e)
        {
            System.Web.UI.WebControls.Panel paneltutor = new System.Web.UI.WebControls.Panel();
            paneltutor = (System.Web.UI.WebControls.Panel)(FormViewModuleTemplate.FindControl("TutorPanel"));

            System.Web.UI.WebControls.CheckBox chktutor = new System.Web.UI.WebControls.CheckBox();
            chktutor = (System.Web.UI.WebControls.CheckBox)(FormViewModuleTemplate.FindControl("cbTutors"));
            //check if formview is readonly first
            if (FormViewModuleTemplate.CurrentMode == FormViewMode.ReadOnly)
            {
                //if nothing selected then hides panel and untick checkbox
                if (e.AffectedRows == 0)
                {
                    chktutor.Checked = false;
                    paneltutor.Visible = false;
                }
                //if makes panel and check both true
                else if (e.AffectedRows > 0)
                {
                    chktutor.Checked = true;
                    paneltutor.Visible = true;
                }
            }
        }

        protected void SqlDataSourceCourseDetails_Selected(object sender, SqlDataSourceStatusEventArgs e)
        {
            System.Web.UI.WebControls.Panel panelcourse = new System.Web.UI.WebControls.Panel();
            panelcourse = (System.Web.UI.WebControls.Panel)(FormViewModuleTemplate.FindControl("CoursePanel"));

            System.Web.UI.WebControls.CheckBox chkcourse = new System.Web.UI.WebControls.CheckBox();
            chkcourse = (System.Web.UI.WebControls.CheckBox)(FormViewModuleTemplate.FindControl("cbCourses"));
            //check if formview is readonly first
            if (FormViewModuleTemplate.CurrentMode == FormViewMode.ReadOnly)
            {
                //if nothing selected then hides panel and untick checkbox
                if (e.AffectedRows == 0)
                {
                    chkcourse.Checked = false;
                    panelcourse.Visible = false;
                }
                //if makes panel and check both true
                else if (e.AffectedRows > 0)
                {
                    chkcourse.Checked = true;
                    panelcourse.Visible = true;
                }
            }
        }

        protected void SqlDataSourceLocationDetails_Selected(object sender, SqlDataSourceStatusEventArgs e)
        {
            System.Web.UI.WebControls.Panel panellocation = new System.Web.UI.WebControls.Panel();
            panellocation = (System.Web.UI.WebControls.Panel)(FormViewModuleTemplate.FindControl("LocationPanel"));

            System.Web.UI.WebControls.CheckBox chklocation = new System.Web.UI.WebControls.CheckBox();
            chklocation = (System.Web.UI.WebControls.CheckBox)(FormViewModuleTemplate.FindControl("cbLocation"));
            //check if formview is readonly first
            if (FormViewModuleTemplate.CurrentMode == FormViewMode.ReadOnly)
            {
                //if nothing selected then hides panel and untick checkbox
                if (e.AffectedRows == 0)
                {
                    chklocation.Checked = false;
                    panellocation.Visible = false;
                }
                //if makes panel and check both true
                else if (e.AffectedRows > 0)
                {
                    chklocation.Checked = true;
                    panellocation.Visible = true;
                }
            }
        }

        protected void SqlDataSourceAssessmentTable_Selected(object sender, SqlDataSourceStatusEventArgs e)
        {
            System.Web.UI.WebControls.Panel paneltable = new System.Web.UI.WebControls.Panel();
            paneltable = (System.Web.UI.WebControls.Panel)(FormViewModuleTemplate.FindControl("TablePanel"));
            //check if formview is readonly first
            if (FormViewModuleTemplate.CurrentMode == FormViewMode.ReadOnly)
            {
                //if nothing selected then hides panel and untick checkbox
                if (e.AffectedRows == 0)
                {
                    paneltable.Visible = false;
                }
                //if makes panel and check both true
                else if (e.AffectedRows > 0)
                {
                    paneltable.Visible = true;
                }
            }
        }
        #endregion

        protected void btnExportToWord_Click(object sender, ImageClickEventArgs e)
        {
            try
            {
                //Export the spec information to a template then saves this file as a word document.
                string code = ((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleCodeLabel")).Text.Replace("&nbsp;", " ");
                ExportSpecInformation();
                oWordDoc.SaveAs(Server.MapPath(@"~\Documents\Word\" + code + ".docx"));
                //devunishare.hud.ac.uk/faser/Module Specification Documents/School of Computing and Engineering/Department of Informatics
                ((_Application)oWord).Quit();
                //shows this link on the application of the new file
                OpenWordLink.Visible = true;
                OpenWordLink.Text = "Click to view updated " + LabelCode.Text + ".docx";

            }
            catch (Exception)
            {
                //Force closes the document and application and prompt an error.
                object doNotSaveChanges = Microsoft.Office.Interop.Word.WdSaveOptions.wdDoNotSaveChanges;
                oWord.Documents.Close(ref doNotSaveChanges, ref oMissing, ref oMissing);
                ((_Application)oWord).Quit();
                MessageBox.Show("Error: The information was not able to export to word, please try again later.", "Message from the server");
            }
        }

        protected void btnExportToPDF_Click(object sender, ImageClickEventArgs e)
        {
            try
            {
                //Export the spec information to a template then saves this file as a PDF.
                ExportSpecInformation();
                string code = ((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleCodeLabel")).Text.Replace("&nbsp;", " ");
                oWordDoc.ExportAsFixedFormat((Server.MapPath(@"~\Documents\PDFs\" + code + ".pdf")), WdExportFormat.wdExportFormatPDF);
                object doNotSaveChanges = Microsoft.Office.Interop.Word.WdSaveOptions.wdDoNotSaveChanges;
                oWord.Documents.Close(ref doNotSaveChanges, ref oMissing, ref oMissing);
                ((_Application)oWord).Quit();
                //shows this link on the application of the new file
                OpenPDFLink.Visible = true;
                OpenPDFLink.Text = "Click to view updated " + LabelCode.Text + ".pdf";
            }
            catch (Exception)
            {
                //Force closes the document and application and prompt an error.
                object doNotSaveChanges = Microsoft.Office.Interop.Word.WdSaveOptions.wdDoNotSaveChanges;
                oWord.Documents.Close(ref doNotSaveChanges, ref oMissing, ref oMissing);
                ((_Application)oWord).Quit();
                MessageBox.Show("Error: The information was not able to export to word, please try again later.", "Message from the server");
            }
        }

        protected void OpenWordLink_Click(object sender, EventArgs e)
        {
            try
            {
                //Passes the file path through the steam to allow users to get a copy of the word document
                string code = ((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleCodeLabel")).Text.Replace("&nbsp;", " ");
                string path = (Server.MapPath(@"~\Documents\Word\" + code + ".docx"));

                System.IO.FileInfo file = new System.IO.FileInfo(path);
                if (file.Exists)
                {
                    Response.Clear();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + file.Name);
                    Response.AddHeader("Content-Length", file.Length.ToString());
                    Response.ContentType = "application/octet-stream";
                    Response.WriteFile(file.FullName);
                    Response.End();
                }
                else
                {
                    //promot error if no file
                    MessageBox.Show("This file does not exist");
                }
            }
            catch (NullReferenceException)
            {
                //promot error if null
                MessageBox.Show("This file does not exist");
            }
        }

        protected void OpenPDFLink_Click(object sender, EventArgs e)
        {
            //Passes the file path through the steam to allow users to get a copy of the word document
            string code = ((System.Web.UI.WebControls.Label)FormViewModuleTemplate.FindControl("ModuleCodeLabel")).Text.Replace("&nbsp;", " ");
            string path = Server.MapPath(@"~\Documents\PDFs\" + code + ".pdf");
            System.IO.FileInfo file = new System.IO.FileInfo(path);
            if (file.Exists)
            {
                Response.Clear();
                Response.AddHeader("Content-Disposition", "attachment; filename=" + file.Name);
                Response.AddHeader("Content-Length", file.Length.ToString());
                Response.ContentType = "application/octet-stream";
                Response.WriteFile(file.FullName);
                Response.End();
            }
            else
            {
                //promot error if no file
                MessageBox.Show("This file does not exist.");
            }
        }

        protected void lbAddCourse_Click(object sender, EventArgs e)
        {
            if (FormViewModuleTemplate.CurrentMode == FormViewMode.Edit)
            {
                //Adds a new course for the module. Takes the Module and CourseID and insert into the modulespec table
                System.Web.UI.WebControls.GridView CourseInsertgv = new System.Web.UI.WebControls.GridView();
                CourseInsertgv = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewCourseDetails1"));

                System.Web.UI.WebControls.DropDownList Coursedropdown = new System.Web.UI.WebControls.DropDownList();
                Coursedropdown = (System.Web.UI.WebControls.DropDownList)(FormViewModuleTemplate.FindControl("DropDownListCourses"));

                System.Web.UI.WebControls.SqlDataSource sqlCourses = new System.Web.UI.WebControls.SqlDataSource();
                sqlCourses = (System.Web.UI.WebControls.SqlDataSource)(FormViewModuleTemplate.FindControl("SqlGetCourses"));

                System.Web.UI.WebControls.Label CourseError = new System.Web.UI.WebControls.Label();
                CourseError = (System.Web.UI.WebControls.Label)(FormViewModuleTemplate.FindControl("lblCourseError"));

                String r = lblStoreModuleCode.Text;
                try
                {
                    SqlCourseDetails.InsertParameters["ModuleID"].DefaultValue = r.ToString();
                    SqlCourseDetails.InsertParameters["CourseID"].DefaultValue = Coursedropdown.SelectedValue.ToString();

                    SqlCourseDetails.Insert();

                    SqlCourseDetails.DataBind();
                    CourseInsertgv.DataBind();

                    CourseError.Font.Size = FontUnit.Small;
                    CourseError.ForeColor = System.Drawing.Color.Black;
                    CourseError.Text = "Course has been added successfully!";
                }
                catch (SqlException)
                {
                    CourseError.Font.Size = FontUnit.Medium;
                    CourseError.ForeColor = System.Drawing.Color.Red;
                    CourseError.Text = "This Course is already added!";
                }
            }
        }

        protected void lbAddTutor_Click(object sender, EventArgs e)
        {
            //Adds a new tutor for the module. Takes the Module and tutor ID and insert into the modulespec table
            System.Web.UI.WebControls.GridView InsertTutorgv = new System.Web.UI.WebControls.GridView();
            InsertTutorgv = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewTutorDetails1"));

            System.Web.UI.WebControls.DropDownList Tutordropdown = new System.Web.UI.WebControls.DropDownList();
            Tutordropdown = (System.Web.UI.WebControls.DropDownList)(FormViewModuleTemplate.FindControl("DropDownListTutors"));

            System.Web.UI.WebControls.Label TutorError = new System.Web.UI.WebControls.Label();
            TutorError = (System.Web.UI.WebControls.Label)(FormViewModuleTemplate.FindControl("lblTutorError"));

            System.Web.UI.WebControls.SqlDataSource sqltutors = new System.Web.UI.WebControls.SqlDataSource();
            sqltutors = (System.Web.UI.WebControls.SqlDataSource)(FormViewModuleTemplate.FindControl("SqlGetTutors"));

            if (FormViewModuleTemplate.CurrentMode == FormViewMode.Edit)
            {
                String r = lblStoreModuleCode.Text;
                try
                {
                    SqlTutorDetails.InsertParameters["ModuleID"].DefaultValue = r.ToString();
                    SqlTutorDetails.InsertParameters["TutorID"].DefaultValue = Tutordropdown.SelectedValue.ToString();

                    SqlTutorDetails.Insert();
                    InsertTutorgv.DataBind();
                    SqlTutorDetails.DataBind();

                    TutorError.Font.Size = FontUnit.Small;
                    TutorError.ForeColor = System.Drawing.Color.Black;
                    TutorError.Text = "Tutor has been added successfully!";
                }
                catch (SqlException)
                {
                    TutorError.Font.Size = FontUnit.Medium;
                    TutorError.ForeColor = System.Drawing.Color.Red;
                    TutorError.Text = "This Tutor is already added!";
                }
            }
        }

        protected void lbAddLocation_Click(object sender, EventArgs e)
        {
            //Adds a new location for the module. Takes the Module and tutor ID and insert into the modulespec table
            System.Web.UI.WebControls.GridView InsertLocationgv = new System.Web.UI.WebControls.GridView();
            InsertLocationgv = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewLocationDetails1"));

            System.Web.UI.WebControls.DropDownList Locationdropdown = new System.Web.UI.WebControls.DropDownList();
            Locationdropdown = (System.Web.UI.WebControls.DropDownList)(FormViewModuleTemplate.FindControl("DropDownListLocations"));

            System.Web.UI.WebControls.SqlDataSource sqllocation = new System.Web.UI.WebControls.SqlDataSource();
            sqllocation = (System.Web.UI.WebControls.SqlDataSource)(FormViewModuleTemplate.FindControl("SqlGetLocations"));

            System.Web.UI.WebControls.Label LocationError = new System.Web.UI.WebControls.Label();
            LocationError = (System.Web.UI.WebControls.Label)(FormViewModuleTemplate.FindControl("lblLocationError"));

            if (FormViewModuleTemplate.CurrentMode == FormViewMode.Edit)
            {
                String r = lblStoreModuleCode.Text;
                try
                {
                    SqlLocationDetails.InsertParameters["ModuleID"].DefaultValue = r.ToString();
                    SqlLocationDetails.InsertParameters["LocationID"].DefaultValue = Locationdropdown.SelectedValue.ToString();

                    SqlLocationDetails.Insert();
                    SqlLocationDetails.DataBind();
                    InsertLocationgv.DataBind();

                    LocationError.Font.Size = FontUnit.Small;
                    LocationError.ForeColor = System.Drawing.Color.Black;
                    LocationError.Text = "Location has been added successfully!";
                }
                catch (SqlException)
                {
                    LocationError.Font.Size = FontUnit.Medium;
                    LocationError.ForeColor = System.Drawing.Color.Red;
                    LocationError.Text = "This Location is already added!";
                }
            }
        }

        protected void lblInsertTable_Click(object sender, EventArgs e)
        {
            //Inserts a new assessment type to the assessment table
            if (FormViewModuleTemplate.CurrentMode == FormViewMode.Edit)
            {
                String r = lblStoreModuleCode.Text;

                System.Web.UI.WebControls.GridView InsertAssessmentgv = new System.Web.UI.WebControls.GridView();
                InsertAssessmentgv = (System.Web.UI.WebControls.GridView)(FormViewModuleTemplate.FindControl("GridViewAssessmentTable1"));

                System.Web.UI.WebControls.FormView FormViewAssessment = new System.Web.UI.WebControls.FormView();
                FormViewAssessment = (System.Web.UI.WebControls.FormView)(FormViewModuleTemplate.FindControl("FormViewInsertAssessment"));

                SqlAssessmentTable.InsertParameters["AssessmentType"].DefaultValue = ((System.Web.UI.WebControls.TextBox)FormViewAssessment.HeaderRow.FindControl("TextBoxType")).Text;
                SqlAssessmentTable.InsertParameters["LO"].DefaultValue = ((System.Web.UI.WebControls.TextBox)FormViewAssessment.HeaderRow.FindControl("TextBoxLO")).Text;
                SqlAssessmentTable.InsertParameters["Summary"].DefaultValue = ((System.Web.UI.WebControls.TextBox)FormViewAssessment.HeaderRow.FindControl("TextBoxSummary")).Text;
                SqlAssessmentTable.InsertParameters["Component"].DefaultValue = ((System.Web.UI.WebControls.TextBox)FormViewAssessment.HeaderRow.FindControl("TextBoxComponent")).Text;
                SqlAssessmentTable.InsertParameters["FE"].DefaultValue = ((System.Web.UI.WebControls.RadioButtonList)FormViewAssessment.HeaderRow.FindControl("CheckBoxFE")).Text;
                SqlAssessmentTable.InsertParameters["TR"].DefaultValue = ((System.Web.UI.WebControls.RadioButtonList)FormViewAssessment.HeaderRow.FindControl("CheckBoxTR")).Text;
                SqlAssessmentTable.InsertParameters["AM"].DefaultValue = ((System.Web.UI.WebControls.RadioButtonList)FormViewAssessment.HeaderRow.FindControl("CheckBoxAM")).Text;
                SqlAssessmentTable.InsertParameters["AssessmentID"].DefaultValue = r.ToString();

                SqlAssessmentTable.Insert();
                SqlAssessmentTable.DataBind();
                InsertAssessmentgv.DataBind();
                FormViewAssessment.ChangeMode(FormViewMode.ReadOnly);
                FormViewAssessment.Focus();
            }
        }

        protected void FormViewInsertAssessment_DataBound(object sender, EventArgs e)
        {
            System.Web.UI.WebControls.FormView FormViewAssessment = new System.Web.UI.WebControls.FormView();
            FormViewAssessment = (System.Web.UI.WebControls.FormView)(FormViewModuleTemplate.FindControl("FormViewInsertAssessment"));
            //If Assessment formview is in insert then the formview get a focus set to it
            if (FormViewAssessment.CurrentMode == FormViewMode.Insert)
            {
                FormViewAssessment.Focus();
            }
        }

        protected void FormViewModuleTemplate_ModeChanged(object sender, EventArgs e)
        {
            //Check to see if formview mode has been changed.
            if (FormViewModuleTemplate.CurrentMode == FormViewMode.Edit)
            {
                //doesn't hide the update panel and progress if not in edit mode
                UpdatePanel1.Visible = false;
                UpdateProgress1.Visible = false;
            }
            else
            {
                //hides the update panel and progress
                UpdatePanel1.Visible = true;
                UpdateProgress1.Visible = true;
            }
        }

        protected void LinkButtonRefresh_Click(object sender, EventArgs e)
        {
            //Refreshes all Three sqldatasources.
            System.Web.UI.WebControls.SqlDataSource sqlgetcourse = new System.Web.UI.WebControls.SqlDataSource();
            sqlgetcourse = (System.Web.UI.WebControls.SqlDataSource)(FormViewModuleTemplate.FindControl("SqlDataSourceGetCourses"));

            System.Web.UI.WebControls.SqlDataSource sqlgettutors = new System.Web.UI.WebControls.SqlDataSource();
            sqlgettutors = (System.Web.UI.WebControls.SqlDataSource)(FormViewModuleTemplate.FindControl("SqlDataSourceGetTutors"));

            System.Web.UI.WebControls.SqlDataSource getlocation = new System.Web.UI.WebControls.SqlDataSource();
            getlocation = (System.Web.UI.WebControls.SqlDataSource)(FormViewModuleTemplate.FindControl("SqlDataSourceGetLocations"));

            sqlgetcourse.DataBind();
            sqlgettutors.DataBind();
            getlocation.DataBind();
        }

    }
}